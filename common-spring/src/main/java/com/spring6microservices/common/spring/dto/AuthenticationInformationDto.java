package com.spring6microservices.common.spring.dto;

import io.swagger.v3.oas.annotations.media.Schema;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;

import java.io.Serial;
import java.io.Serializable;
import java.util.Map;

import static io.swagger.v3.oas.annotations.media.Schema.RequiredMode;

/**
 * Required information to send as response when trying to authenticate a user.
 */
@AllArgsConstructor
@Builder
@EqualsAndHashCode(of = { "id" })
@Data
@NoArgsConstructor
@Schema(description = "Returned data after authenticate a user")
public class AuthenticationInformationDto implements Serializable {

    @Serial
    private static final long serialVersionUID = -4007535195077048326L;

    @Schema(description = "Unique identifier of every authentication information instance. Usually a UUID autogenerated value", requiredMode = RequiredMode.REQUIRED)
    private String id;

    @Schema(description = "What was the application (or microservice) used to generate this instance")
    private String application;

    @Schema(description = "Token-based authentication to allow an application to access the microservices", requiredMode = RequiredMode.REQUIRED)
    private String accessToken;

    @Schema(description = "Access token expiration time in seconds", requiredMode = RequiredMode.REQUIRED)
    private int expiresIn;

    @Schema(description = "Special token used to obtain additional access tokens", requiredMode = RequiredMode.REQUIRED)
    private String refreshToken;

    @Schema(description = "Extra data returned by security service")
    private Map<String, Object> additionalInformation;

}
